#!/usr/bin/env ruby

require "bundler/inline"
gemfile do
  source "https://rubygems.org"
  gem "multi_repo", ">= 0.4.0", require: "multi_repo/cli"
end

opts = Optimist.options do
  opt :plugin, "Whether or not this is a ManageIQ plugin", :type => :boolean, :required => true
  opt :repo_set, "The repo_set this repo should belong to", :type => :string, :default => "master"

  MultiRepo::CLI.common_options(self, :except => :repo_set)
end

repo = MultiRepo::CLI.repos_for(**opts).first
labels = MultiRepo::Labels.config["repos"][opts[:repo].first]
unless repo && labels
  STDERR.puts "ERROR: First update config for repos and labels with the new repo"
  exit 1
end

puts "\n** Updating Repo Settings"
MultiRepo::Helpers::UpdateRepoSettings.new(repo.name, **opts).run
puts "\n** Updating Branch Protection"
MultiRepo::Helpers::UpdateBranchProtection.new(repo.name, **opts.merge(:branch => "master")).run
puts "\n** Updating Labels"
MultiRepo::Helpers::UpdateLabels.new(repo.name, **opts).run
if opts[:plugin]
  puts "\n** Reserve rubygems entry"
  MultiRepo::Service::RubygemsStub.new(repo.short_name, **opts).run
end
puts "\n** Enabling CodeClimate..."
code_climate = MultiRepo::Service::CodeClimate.new(repo, **opts)
code_climate.enable
puts "\n** Creating CodeClimate GitHub repository secret..."
code_climate.create_repo_secret

puts
puts "******* MANUAL THINGS *******"
puts "- https://github.com/#{repo.name}/settings/access should have the following teams"
puts "  - bots (Write permission)"
puts "  - core-admins (Admin permission)"
if opts[:plugin]
  puts "  - core-providers (Read permission - if a provider plugin)"
  puts "  - a core-provider-plugins sub team (Read permission - if a provider plugin with a subteam)"
  puts "  - core-ui (Read permission - if the plugin has a UI component)"
end
puts "  - security (Read permission)"
puts "- https://codeclimate.com/github/#{repo.name} => Repo Settings => GitHub => Pull Request Status Updates => Install"
if opts[:plugin]
  puts "- Add repo to repos.sets.yml if this is a new core or provider plugin"
  puts "- Add repo to mirror settings"
end
puts "- Add repo to the bot"
if opts[:plugin]
  puts "  - Also add repo to the bot settings list of plugins"
end
